<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.5</version>
		<relativePath />
		<!-- lookup parent from repository -->
	</parent>

	<groupId>eu.solven.adhoc</groupId>
	<artifactId>aggregator-adhoc</artifactId>
	<version>0.0.7-SNAPSHOT</version>

	<packaging>pom</packaging>

	<name>${project.groupId}:${project.artifactId}</name>
	<description>InMemory Transformation Pipeline</description>
	<url>https://github.com/solven-eu/adhoc</url>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>blacelle</id>
			<name>Benoit Chatain Lacelle</name>
			<email>benoit at solven.eu</email>
			<roles>
				<role>Project lead</role>
			</roles>
		</developer>
	</developers>

	<modules>
		<module>adhoc</module>
		<module>public</module>
		<module>experimental</module>
		<module>calcite</module>
		<module>spring</module>

		<module>pivotable</module>
	</modules>

	<scm>
		<!-- readonly -->
		<connection>scm:git:git@github.com:solven-eu/adhoc.git</connection>
		<!-- readwrite -->
		<developerConnection>scm:git:git@github.com:solven-eu/adhoc.git</developerConnection>
		<tag>v0.0.2</tag>
		<url>https://github.com/solven-eu/adhoc</url>
	</scm>

	<properties>
		<java.version>21</java.version>

		<pepper.version>5.1</pepper.version>

		<spotless.version>2.44.4</spotless.version>
		<cleanthat.version>2.22</cleanthat.version>

		<!-- By default (i.e. in local environments), check for code formatting AFTER trying automatic fixes. -->
		<!-- We suppose the developper would see the fixed and include them in his commit. -->
		<!-- In the CI, we check BEFORE automatic fixes as the CI should report early invalid code -->
		<staticChecks>process-sources</staticChecks>

		<!-- Optional dependencies -->
		<!-- Typically not optional when referred by pivotable-server-->
		<evalex.ezylang.version>3.5.0</evalex.ezylang.version>
		<duckdb.version>1.2.2.0</duckdb.version>

		<!-- Jacoco requirements on a per-module basis-->
		<jacoco.branch.ratio>0.50</jacoco.branch.ratio>
		<jacoco.instruction.ratio>0.70</jacoco.instruction.ratio>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>

	<build>

		<pluginManagement>
			<plugins>
				<plugin>
					<!-- We want to provide source jars -->
					<!-- https://maven.apache.org/plugins/maven-source-plugin/ -->
					<!-- Needed by Sonatype deployment-->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>3.3.1</version>
					<executions>
						<execution>
							<id>attach-sources</id>
							<goals>
								<goal>jar-no-fork</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- Needed by Sonatype deployment-->
					<!-- Out Javadoc is very weak-->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>3.11.2</version>
					<configuration>
						<!-- https://bugs.java.com/bugdatabase/view_bug.do?bug_id=8212233 -->
						<!-- <source>8</source>-->
						<defaultAuthor>Benoit Chatain Lacelle</defaultAuthor>
						<failOnError>false</failOnError>
						<!-- https://docs.oracle.com/en/java/javase/17/docs/specs/man/javadoc.html#additional-options-provided-by-the-standard-doclet -->
						<!-- https://maven.apache.org/plugins/maven-javadoc-plugin/javadoc-mojo.html#doclint -->
						<doclint>-html,-syntax,-accessibility,-missing</doclint>
						<!-- https://stackoverflow.com/questions/71784748/maven-javadoc-plugin-generates-warning-about-generating-every-file-why-what-is -->
						<quiet>true</quiet>
					</configuration>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<!-- Needed by Sonatype deployment-->
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>3.2.7</version>
					<executions>
						<execution>
							<id>sign-artifacts</id>
							<goals>
								<goal>sign</goal>
							</goals>
							<phase>verify</phase>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<!-- mvn com.diffplug.spotless:spotless-maven-plugin:apply -->
					<!-- mvn com.diffplug.spotless:spotless-maven-plugin:check -->
					<groupId>com.diffplug.spotless</groupId>
					<artifactId>spotless-maven-plugin</artifactId>
					<version>${spotless.version}</version>
					<configuration>
						<!-- optional: limit format enforcement to just the files changed by this feature branch -->
						<!--ratchetFrom>origin/master</ratchetFrom-->
						<formats>
							<!-- you can define as many formats as you want, each is independent -->
							<format>
								<!-- define the files to apply to -->
								<includes>
									<include>.gitignore</include>
								</includes>
								<!-- define the steps to apply to those files -->
								<trimTrailingWhitespace />
								<endWithNewline />
								<indent>
									<tabs>true</tabs>
									<spacesPerTab>4</spacesPerTab>
								</indent>
							</format>
						</formats>

						<pom>
							<includes>
								<include>pom.xml</include>
							</includes>

							<!-- https://github.com/diffplug/spotless/tree/main/plugin-maven#sortpom -->
							<sortPom>
								<!-- We like empty elements, while plugin default configuration would expand them -->
								<expandEmptyElements>false</expandEmptyElements>

								<!-- https://github.com/Ekryd/sortpom/issues/75 -->
								<spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>

								<!-- https://github.com/Ekryd/sortpom/wiki/Parameters#for-both-the-sort-and-verify-goal -->
								<!-- -1 means '\t' -->
								<nrOfIndentSpace>-1</nrOfIndentSpace>
							</sortPom>
						</pom>

						<markdown>
							<endWithNewline />
							<indent>
								<tabs>true</tabs>
								<spacesPerTab>4</spacesPerTab>
							</indent>
							<includes>
								<include>**/*.md</include>
							</includes>

							<flexmark />
						</markdown>

						<!-- define a language-specific format -->
						<java>
							<excludes>
								<!-- TestCases needs to remains not formatted/cleaned -->
								<exclude>**/do_not_format_me/**</exclude>
							</excludes>

							<cleanthat>
								<sourceJdk>${maven.compiler.source}</sourceJdk>
								<version>${cleanthat.version}</version>
								<mutators>
									<mutator>SafeAndConsensual</mutator>
									<mutator>SafeButNotConsensual</mutator>
								</mutators>
								<includeDraft>true</includeDraft>
								<excludedMutators>
									<!-- https://github.com/javaparser/javaparser/issues/3930 -->
									<excludedMutator>LambdaReturnsSingleStatement</excludedMutator>
									<!-- Too much instable -->
									<excludedMutator>UseDiamondOperator</excludedMutator>
									<!-- PMD recommends not using `var` -->
									<excludedMutator>LocalVariableTypeInference</excludedMutator>
								</excludedMutators>
							</cleanthat>

							<!--							<removeUnusedImports />-->
							<importOrder>
								<file>${maven.multiModuleProjectDirectory}/.cleanthat/eclipse.importorder</file>
								<!--order>java,javax,org,com</order-->
							</importOrder>

							<eclipse>
								<!--
                                https://github.com/diffplug/spotless/tree/main/lib-extra/src/main/resources/com/diffplug/spotless/extra/eclipse_jdt_formatter -->
								<!-- <version>4.18.0</version>-->
								<file>${maven.multiModuleProjectDirectory}/.cleanthat/eclipse_java_code_formatter.xml</file>
							</eclipse>

							<licenseHeader>
								<!-- https://github.com/diffplug/spotless/issues/1418 -->
								<delimiter>(package )|(import )</delimiter>
								<file>${maven.multiModuleProjectDirectory}/.cleanthat/spotless.license</file>
							</licenseHeader>
						</java>

						<json>
							<trimTrailingWhitespace />
							<endWithNewline />
							<indent>
								<tabs>true</tabs>
								<spacesPerTab>4</spacesPerTab>
							</indent>

							<includes>
								<!-- json files at root-->
								<include>*.json</include>
								<!-- json files in folders like `.cleanthat` -->
								<include>/.*/*.json</include>
								<!-- json files in src folder-->
								<include>src/**/*.json</include>
								<!-- Make sure the root modules does not process all json of all modules-->
							</includes>

							<excludes>
								<!-- Given file is the concatenation of multiple small JSONs, 1 JSON per line-->
								<exclude>/src/test/resources/zips-mini.json</exclude>
							</excludes>

							<gson />
						</json>

						<!-- yaml formatting is disabled as it drops comments -->

						<javascript>
							<includes>
								<!-- Do not include HTML and Vue files -->
								<!-- https://biomejs.dev/internals/language-support/#html-super-languages-support -->
								<include>src/**/*.js</include>
							</includes>

							<!-- https://biomejs.dev/ -->
							<biome>
								<!-- Download Biome from the network if not already downloaded, see below for more info  -->
								<version>1.9.4</version>

								<!-- (optional) Path to the directory with the biome.json config file -->
								<configPath>${maven.multiModuleProjectDirectory}/.cleanthat/</configPath>

								<!-- (optional) Biome will auto detect the language based on the file extension. -->
								<!-- See below for possible values. -->
								<!--        <language>js</language>-->
							</biome>
						</javascript>
					</configuration>

					<executions>
						<execution>
							<id>applySpotless</id>
							<goals>
								<goal>apply</goal>
							</goals>
							<phase>process-sources</phase>
						</execution>
					</executions>
				</plugin>

				<!-- -Djacoco.skip=true -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>0.8.13</version>
					<executions>
						<execution>
							<id>default-prepare-agent</id>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>default-report</id>
							<goals>
								<goal>report</goal>
							</goals>
							<phase>prepare-package</phase>
						</execution>
						<execution>
							<id>default-check</id>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<rules>
									<rule implementation="org.jacoco.maven.RuleConfiguration">
										<!-- BUNDLE, PACKAGE, CLASS, SOURCEFILE or METHOD -->
										<element>BUNDLE</element>
										<limits>
											<limit implementation="org.jacoco.report.check.Limit">
												<!-- INSTRUCTION, LINE, BRANCH, COMPLEXITY, METHOD, CLASS -->
												<counter>BRANCH</counter>
												<!-- TOTALCOUNT, COVEREDCOUNT, MISSEDCOUNT, COVEREDRATIO, MISSEDRATIO -->
												<value>COVEREDRATIO</value>
												<minimum>${jacoco.branch.ratio}</minimum>
											</limit>
											<limit implementation="org.jacoco.report.check.Limit">
												<!-- INSTRUCTION, LINE, BRANCH, COMPLEXITY, METHOD, CLASS -->
												<counter>INSTRUCTION</counter>
												<!-- TOTALCOUNT, COVEREDCOUNT, MISSEDCOUNT, COVEREDRATIO, MISSEDRATIO -->
												<value>COVEREDRATIO</value>
												<minimum>${jacoco.instruction.ratio}</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<!-- https://maven.apache.org/maven-release/maven-release-plugin/prepare-mojo.html#autoVersionSubmodules -->
					<autoVersionSubmodules>true</autoVersionSubmodules>
					<!-- https://maven.apache.org/maven-release/maven-release-plugin/prepare-mojo.html#signTag -->
					<signTag>true</signTag>
					<!-- https://maven.apache.org/maven-release/maven-release-plugin/usage/prepare-release.html#overriding-the-default-tag-name-format -->
					<!-- https://maven.apache.org/maven-release/maven-release-plugin/prepare-mojo.html#tagNameFormat -->
					<tagNameFormat>v@{project.version}</tagNameFormat>

					<!-- http://central.sonatype.org/pages/apache-maven.html -->
					<!-- Sonatype profile is defined in pepper-metadata -->
					<releaseProfiles>sonatype,activeviam</releaseProfiles>

					<!-- On each release, push the jars to Maven Central -->
					<goals>deploy</goals>
				</configuration>
			</plugin>

			<!-- https://central.sonatype.org/publish/publish-portal-maven/#automatic-publishing -->
			<plugin>
				<groupId>org.sonatype.central</groupId>
				<artifactId>central-publishing-maven-plugin</artifactId>
				<version>0.7.0</version>
				<extensions>true</extensions>
				<configuration>
					<publishingServerId>central</publishingServerId>
					<autoPublish>true</autoPublish>
					<!-- `published` state can take hours to be reached-->
					<waitUntil>validated</waitUntil>
				</configuration>
			</plugin>
		</plugins>

	</build>

	<profiles>
		<profile>
			<!-- mvn clean install -Pactiveviam -->
			<!-- This would require adding a private repository holding activeviam jars -->
			<!-- https://docs.activeviam.com/products/atoti/server/6.1.1/docs/start/download/ -->
			<id>activeviam</id>
			<modules>
				<module>atoti</module>
			</modules>
		</profile>

		<profile>
			<!-- http://central.sonatype.org/pages/apache-maven.html#deploying-to-ossrh-with-apache-maven-introduction -->
			<id>sonatype</id>

			<!-- `ossrh` needs a server entry in settings.xml -->
			<distributionManagement>
				<repository>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
				</repository>
				<snapshotRepository>
					<id>ossrh</id>
					<url>https://oss.sonatype.org/content/repositories/snapshots</url>
				</snapshotRepository>
			</distributionManagement>

			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<!-- Used to recompile quickly only the core components -->
			<id>fast</id>
			<properties>
				<!-- Code style -->
				<checkstyle.skip>true</checkstyle.skip>
				<pmd.skip>true</pmd.skip>
				<cpd.skip>true</cpd.skip>
				<spotbugs.skip>true</spotbugs.skip>
				<maven.javadoc.skip>true</maven.javadoc.skip>
				<license.skip>true</license.skip>
				<formatter.skip>true</formatter.skip>
				<impsort.skip>true</impsort.skip>
				<cleanthat.skip>true</cleanthat.skip>
				<skip.npm.style>true</skip.npm.style>
				<spotless.skip>true</spotless.skip>

				<!-- Dependency will be checked with style -->
				<enforcer.skip>true</enforcer.skip>

				<skipTests>true</skipTests>
				<skipITs>true</skipITs>
				<jacoco.skip>true</jacoco.skip>
			</properties>
		</profile>
	</profiles>
</project>
